import sys
from PyQt5.QtWidgets import QApplication, QDialog, QVBoxLayout, QLabel, QLineEdit, QPushButton, QHBoxLayout, QCheckBox, QMessageBox
from PyQt5.QtGui import QPixmap
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QDesktopServices
from PyQt5.QtCore import QUrl
import requests
import setting
from PyQt5.QtSvg import QSvgRenderer
from PyQt5.QtGui import QImage, QPainter
from PyQt5.QtCore import QByteArray, QSize

def svg_string_to_qimage(svg_string, size):
    # Create a QSvgRenderer from the SVG string
    renderer = QSvgRenderer(QByteArray(svg_string.encode()))

    # Create a QImage to render the SVG
    image = QImage(QSize(size[0], size[1]), QImage.Format_ARGB32)
    image.fill(0)  # Fill the image with a transparent background

    # Render the SVG onto the QImage
    painter = QPainter(image)
    renderer.render(painter)
    painter.end()

    return image

icon3_str = """
<svg version="1.0" xmlns="http://www.w3.org/2000/svg"
 width="300.000000pt" height="292.000000pt" viewBox="0 0 300.000000 292.000000"
 preserveAspectRatio="xMidYMid meet">
<metadata>
Created by potrace 1.10, written by Peter Selinger 2001-2011
</metadata>
<g transform="translate(0.000000,292.000000) scale(0.050000,-0.050000)"
fill="#000000" stroke="none">
<path d="M2310 5655 c-218 -75 -364 -194 -458 -375 -85 -164 -78 -160 -270
-160 -454 0 -742 -282 -742 -727 0 -210 -12 -232 -164 -294 -389 -159 -480
-601 -229 -1111 l40 -83 -58 -97 c-174 -290 -192 -481 -74 -772 41 -100 143
-196 333 -311 147 -90 152 -98 159 -317 15 -415 251 -666 654 -698 256 -20
276 -28 333 -128 43 -77 138 -210 196 -273 176 -193 635 -203 905 -20 112 77
185 65 311 -50 19 -19 103 -49 186 -69 345 -81 653 71 829 410 44 85 72 100
193 101 332 2 619 150 715 371 19 43 44 95 55 116 11 21 25 129 31 240 12 228
16 236 181 322 352 184 486 704 257 995 -61 77 -87 240 -43 271 20 13 80 132
127 250 63 155 10 507 -91 611 -15 14 -35 43 -47 64 -21 40 -302 239 -338 239
-27 0 -37 54 -48 270 -15 285 -146 503 -366 609 -54 26 -113 55 -132 64 -19 9
-119 17 -221 17 -211 0 -229 10 -317 180 -53 103 -180 236 -267 280 -33 16
-64 35 -70 40 -98 102 -463 66 -668 -65 -140 -89 -221 -93 -292 -14 -87 96
-460 166 -610 114z m385 -86 c36 -8 65 -22 65 -31 0 -10 18 -18 40 -18 22 0
40 -7 40 -16 0 -8 27 -25 60 -38 85 -32 75 -47 -81 -125 -77 -38 -139 -75
-139 -81 0 -7 -31 -25 -70 -40 -38 -15 -70 -33 -70 -39 0 -40 -133 -58 -390
-53 -319 7 -310 -2 -186 175 178 254 397 334 731 266z m1070 4 c41 -14 80 -32
88 -39 7 -8 28 -14 45 -14 51 -1 302 -275 302 -330 0 -17 11 -30 23 -30 13 0
18 -6 11 -13 -8 -7 -141 -16 -298 -19 -260 -5 -340 6 -376 50 -5 7 -53 34
-105 60 -52 27 -95 56 -95 65 0 9 -18 17 -40 17 -22 0 -40 7 -40 16 0 9 -32
29 -70 44 -86 34 -81 57 22 110 43 22 83 45 88 50 6 6 33 13 60 17 28 4 64 15
80 24 45 26 220 22 305 -8z m-624 -241 c39 -26 131 -79 205 -118 75 -39 129
-74 120 -78 -28 -15 -824 -5 -838 10 -8 8 0 14 19 14 18 0 33 9 33 20 0 11 17
20 38 20 21 0 42 7 45 15 4 8 50 37 102 63 53 27 106 61 118 75 32 39 79 33
158 -21z m-1435 -285 c7 -6 -13 -49 -44 -95 -31 -45 -87 -140 -124 -212 -37
-71 -73 -134 -79 -140 -7 -5 -18 -26 -25 -45 -7 -19 -26 -35 -42 -35 -16 0
-32 -7 -35 -15 -7 -14 -139 -91 -232 -134 -25 -12 -45 -28 -45 -36 0 -8 -11
-15 -25 -15 -14 -1 -47 -18 -75 -40 -78 -61 -84 -51 -70 125 17 220 55 314
184 448 130 136 238 175 568 204 17 2 37 -3 44 -10z m574 -7 c0 -10 -34 -34
-75 -53 -41 -19 -79 -40 -85 -46 -5 -6 -46 -30 -90 -54 -168 -90 -242 -134
-320 -186 -142 -96 -179 -98 -112 -4 55 79 142 228 155 268 7 19 20 35 29 35
10 0 18 12 18 28 0 22 49 28 240 28 132 1 240 -7 240 -16z m1396 -11 c8 -10
35 -31 62 -46 111 -63 183 -104 372 -217 110 -65 229 -132 265 -147 36 -16 65
-36 65 -44 0 -8 18 -15 40 -15 22 0 40 -9 40 -20 0 -11 13 -20 29 -20 33 0
104 -90 173 -220 26 -49 55 -93 63 -97 8 -3 15 -24 15 -45 0 -21 9 -38 20 -38
11 0 20 -9 20 -20 0 -12 36 -80 80 -152 44 -73 80 -137 80 -142 0 -5 17 -34
38 -64 21 -29 66 -104 100 -166 l62 -112 0 -558 c0 -539 -12 -665 -65 -666 -8
0 -15 -18 -15 -40 0 -22 -9 -40 -20 -40 -11 0 -20 -13 -20 -30 0 -16 -7 -30
-17 -30 -9 0 -29 -25 -44 -55 -15 -30 -61 -110 -101 -177 -40 -68 -85 -151
-100 -185 -15 -35 -33 -63 -39 -63 -6 0 -24 -31 -39 -70 -15 -38 -33 -70 -40
-70 -7 0 -25 -32 -40 -70 -15 -39 -51 -83 -79 -97 -28 -15 -87 -47 -131 -73
-44 -26 -116 -64 -160 -86 -44 -22 -84 -45 -90 -52 -11 -14 -96 -62 -200 -115
-38 -19 -74 -40 -80 -47 -9 -11 -90 -60 -236 -143 -59 -34 -116 -37 -646 -37
l-581 0 -87 60 c-48 33 -97 60 -109 60 -11 0 -21 9 -21 20 0 11 -18 20 -40 20
-22 0 -40 7 -40 16 0 9 -29 32 -65 50 -36 18 -110 60 -165 94 -55 33 -134 76
-175 95 -41 19 -75 41 -75 50 0 8 -18 15 -40 15 -22 0 -40 9 -40 20 0 11 -11
20 -25 20 -46 0 -125 89 -193 220 -37 72 -73 135 -80 140 -7 6 -26 37 -42 70
-16 33 -34 65 -40 70 -5 6 -29 46 -52 90 -67 127 -130 236 -170 293 -21 29
-38 62 -38 73 0 12 -11 24 -25 29 -19 6 -26 137 -30 547 -2 296 -6 562 -7 591
-3 58 96 277 124 277 10 0 18 8 18 18 0 10 36 77 80 150 44 72 80 145 80 162
0 16 7 30 16 30 9 0 35 34 57 75 211 386 203 377 383 467 74 37 139 72 144 78
6 6 69 42 140 79 72 38 141 80 155 93 14 14 43 31 65 38 22 7 40 21 40 31 0
11 18 19 40 19 22 0 40 8 40 18 0 9 16 23 35 29 19 7 62 28 95 47 69 41 1238
54 1266 15z m654 -59 c22 -43 56 -96 75 -118 19 -22 35 -49 35 -61 1 -11 18
-43 40 -71 68 -87 18 -117 -65 -40 -23 22 -54 40 -69 40 -14 0 -26 9 -26 20 0
11 -10 20 -22 20 -12 0 -46 17 -75 38 -86 61 -202 122 -232 122 -15 0 -31 7
-34 15 -4 8 -34 30 -66 48 -112 63 -84 75 163 70 l236 -5 40 -78z m410 46
c196 -81 320 -187 364 -310 13 -36 30 -66 38 -66 16 0 66 -379 52 -393 -9 -9
-90 29 -114 53 -19 19 -130 81 -205 115 -41 19 -75 41 -75 50 0 8 -10 15 -22
15 -49 0 -131 82 -178 178 -27 56 -57 102 -65 102 -8 0 -15 18 -15 40 0 22 -9
40 -20 40 -11 0 -20 14 -20 31 0 17 -18 50 -40 74 -97 104 106 152 300 71z
m92 -656 c15 0 28 -7 28 -15 0 -8 29 -28 65 -44 36 -16 74 -37 85 -46 11 -10
56 -38 100 -62 l80 -44 6 -245 c3 -158 -2 -244 -15 -244 -12 0 -21 13 -21 28
0 16 -7 32 -15 35 -8 4 -37 52 -64 107 -27 55 -64 123 -83 150 -18 28 -52 83
-74 122 -80 143 -95 167 -129 206 -39 44 -42 58 -20 80 8 8 17 5 21 -7 4 -11
20 -21 36 -21z m-3512 -10 c0 -16 -7 -30 -16 -30 -9 0 -38 -45 -65 -100 -27
-55 -56 -100 -64 -100 -8 0 -15 -9 -15 -20 0 -12 -22 -54 -48 -95 -27 -41 -79
-133 -116 -203 -72 -138 -132 -190 -108 -93 8 31 14 139 14 241 0 197 3 203
116 267 26 15 80 45 120 67 39 23 90 53 111 68 51 36 71 35 71 -2z m-487 -553
l4 -283 -81 -132 c-45 -73 -101 -168 -124 -212 -23 -44 -49 -83 -57 -87 -8 -3
-15 -24 -15 -46 0 -112 -132 89 -177 271 -28 111 -30 305 -3 322 11 7 20 26
20 43 0 63 148 251 258 327 174 121 171 124 175 -203z m4516 260 c28 -13 51
-31 51 -40 0 -9 11 -17 25 -17 14 0 66 -44 115 -98 123 -133 140 -156 140
-190 0 -16 9 -35 20 -42 25 -16 26 -378 2 -425 -11 -19 -40 -82 -65 -140 -26
-57 -56 -102 -66 -98 -21 6 -106 142 -124 198 -6 19 -20 35 -29 35 -10 0 -18
18 -18 40 0 22 -9 40 -20 40 -11 0 -20 14 -20 30 0 17 -7 30 -15 30 -55 0 -98
454 -66 695 2 10 19 5 70 -18z m-4519 -1157 c0 -460 -2 -467 -78 -315 -56 112
-116 219 -132 235 -54 54 -53 134 2 180 6 6 42 68 80 139 70 132 101 179 118
180 6 1 10 -188 10 -419z m4505 340 c19 -44 41 -80 50 -80 8 0 15 -18 15 -40
0 -22 9 -40 20 -40 11 0 20 -10 20 -22 0 -12 19 -49 43 -82 44 -62 33 -117
-38 -192 -14 -15 -30 -49 -37 -75 -7 -27 -19 -49 -26 -49 -8 0 -25 -31 -39
-70 -57 -157 -73 -83 -73 330 0 417 7 453 65 320z m-4716 -575 c38 -74 81
-146 94 -160 13 -14 30 -43 37 -65 7 -22 19 -40 27 -40 40 0 60 -148 54 -399
-6 -277 -18 -311 -81 -241 -20 22 -48 40 -63 40 -15 0 -27 9 -27 20 0 11 -10
20 -22 20 -23 0 -178 160 -178 184 0 7 -11 25 -25 40 -66 70 -104 382 -57 471
10 19 42 87 72 150 67 146 85 144 169 -20z m5038 -5 c65 -146 93 -479 43 -510
-11 -7 -20 -30 -20 -51 0 -22 -9 -39 -20 -39 -11 0 -20 -11 -21 -25 0 -37 -99
-138 -210 -216 -55 -38 -105 -78 -113 -88 -31 -44 -39 20 -40 304 -1 280 10
352 64 405 15 15 124 198 170 285 55 104 76 95 147 -65z m-4657 -650 c27 -55
93 -170 145 -256 52 -87 95 -165 95 -175 0 -11 8 -19 18 -19 9 0 23 -16 30
-35 6 -19 17 -46 24 -60 17 -38 -39 -30 -83 11 -22 20 -68 49 -104 65 -36 16
-65 35 -65 42 0 7 -22 18 -49 25 -94 23 -107 57 -108 272 -1 111 -7 211 -14
221 -6 10 -6 28 1 39 18 28 51 -11 110 -130z m4200 -85 c-1 -260 -3 -266 -95
-306 -36 -16 -65 -36 -65 -44 0 -8 -18 -15 -40 -15 -22 0 -40 -9 -40 -20 0
-11 -13 -20 -30 -20 -16 0 -30 -7 -30 -15 0 -23 -120 -71 -136 -54 -8 8 -3 18
11 23 14 5 25 22 25 38 0 15 9 28 20 28 11 0 20 14 20 30 0 17 9 30 20 30 11
0 20 9 20 20 0 12 34 77 75 145 41 69 98 170 125 225 28 55 57 103 65 107 8 3
15 19 15 35 0 15 9 28 20 28 12 0 20 -91 20 -235z m-4214 -390 c29 -14 54 -32
54 -40 0 -8 9 -15 20 -15 12 0 77 -34 146 -75 68 -41 149 -88 179 -103 30 -16
55 -41 55 -55 0 -15 9 -27 20 -27 11 0 20 -18 20 -40 0 -22 7 -40 15 -40 8 0
28 -29 44 -65 37 -84 145 -261 170 -279 86 -61 -285 -27 -429 39 -138 64 -320
253 -320 331 0 17 -8 34 -17 37 -20 8 -43 357 -23 357 6 0 36 -11 66 -25z
m4214 6 c0 -188 -80 -456 -165 -550 -19 -21 -35 -46 -35 -55 0 -9 -13 -16 -28
-16 -16 0 -32 -7 -35 -15 -4 -8 -47 -35 -97 -59 -234 -115 -551 -119 -421 -6
17 15 74 116 135 240 83 167 122 208 260 280 53 27 101 54 106 60 19 19 130
82 165 94 19 6 35 19 35 28 0 10 18 18 40 18 22 0 40 -8 40 -19z m-3600 -359
c0 -9 16 -22 35 -28 34 -11 145 -74 165 -94 20 -20 131 -83 165 -94 19 -6 35
-19 35 -28 0 -10 18 -18 40 -18 22 0 40 -7 40 -15 0 -8 46 -37 102 -65 152
-74 142 -80 -128 -80 l-249 0 -28 55 c-36 73 -142 252 -156 265 -42 38 -70
120 -41 120 11 0 20 -8 20 -18z m2920 -22 c0 -22 -9 -40 -20 -40 -11 0 -20
-13 -20 -30 0 -16 -9 -30 -20 -30 -11 0 -20 -8 -20 -18 0 -10 -35 -75 -77
-145 l-77 -127 -243 -6 c-258 -6 -288 5 -168 61 109 51 321 170 386 215 30 22
65 40 77 40 12 0 22 9 22 20 0 11 12 20 27 20 14 0 43 17 65 39 49 50 68 50
68 1z m-2014 -505 c29 -14 54 -32 54 -40 0 -8 18 -15 40 -15 22 0 40 -7 40
-17 0 -9 25 -29 55 -45 30 -15 60 -33 65 -38 6 -6 53 -32 105 -58 118 -60 118
-62 -10 -119 -58 -26 -127 -57 -153 -70 -219 -105 -552 15 -740 267 -28 39
-57 75 -63 80 -92 79 450 128 607 55z m954 10 c-1 -8 -48 -37 -105 -64 -58
-27 -145 -74 -194 -105 -113 -71 -112 -71 -264 21 -70 42 -156 89 -192 104
-117 51 -71 59 345 59 226 0 410 -7 410 -15z m780 -5 c0 -11 -9 -20 -20 -20
-11 0 -20 -13 -20 -30 0 -16 -7 -30 -16 -30 -8 0 -31 -26 -49 -57 -166 -281
-531 -376 -850 -222 -170 82 -170 80 -55 141 50 26 90 53 90 59 0 6 32 24 70
39 39 15 70 33 70 40 0 7 32 25 70 40 39 15 70 35 70 44 0 9 144 16 320 16
200 0 320 -7 320 -20z"/>
<path d="M3797 4466 c-159 -11 -165 -23 -139 -266 12 -111 22 -461 22 -779 0
-630 -6 -602 120 -587 178 22 166 -40 201 1006 10 281 20 537 23 570 7 68 -6
71 -227 56z"/>
<path d="M2680 4430 c-23 -28 -35 -68 -71 -240 -6 -33 -20 -78 -29 -100 -18
-42 -36 -117 -54 -225 -6 -36 -18 -70 -28 -76 -10 -6 -18 -42 -18 -79 0 -37
-9 -73 -20 -80 -11 -7 -20 -43 -20 -81 0 -38 -9 -69 -20 -69 -11 0 -20 -35
-20 -79 0 -43 -8 -84 -18 -90 -10 -6 -22 -40 -28 -76 -18 -108 -36 -183 -54
-225 -18 -42 -36 -117 -54 -225 -6 -36 -18 -70 -28 -76 -10 -6 -18 -42 -18
-79 0 -37 -9 -73 -20 -80 -11 -7 -20 -43 -20 -80 0 -37 -9 -73 -20 -80 -11 -7
-20 -43 -20 -81 0 -38 -9 -69 -20 -69 -11 0 -20 -29 -20 -65 l0 -65 140 7
c121 5 140 11 140 43 0 21 9 43 20 50 11 7 20 52 20 101 0 49 8 89 17 89 10 0
24 38 31 85 7 47 18 119 24 160 l12 75 296 0 296 0 10 -65 c6 -36 21 -105 33
-155 12 -49 28 -128 34 -175 7 -47 20 -85 30 -85 9 0 17 -27 17 -60 l0 -60
142 0 142 0 -10 65 c-18 108 -36 183 -54 225 -20 47 -39 131 -54 235 -5 41
-18 75 -28 75 -10 0 -18 31 -18 69 0 38 -9 74 -20 81 -11 7 -20 48 -20 91 0
44 -9 79 -20 79 -11 0 -20 31 -20 69 0 38 -9 74 -20 81 -11 7 -20 34 -20 61 0
27 -8 65 -18 84 -22 45 -62 214 -62 265 0 22 -9 40 -20 40 -11 0 -20 31 -20
69 0 38 -9 74 -20 81 -11 7 -20 43 -20 81 0 38 -9 69 -20 69 -11 0 -20 35 -20
79 0 43 -8 84 -18 90 -17 10 -27 50 -53 221 -19 122 -178 185 -249 100z m126
-465 c50 -357 56 -392 115 -625 12 -49 27 -124 33 -165 5 -41 18 -75 28 -75
10 0 18 -34 18 -75 l0 -75 -225 3 c-246 3 -254 9 -197 137 10 22 29 94 42 160
13 66 32 138 41 160 9 22 22 76 29 120 6 44 20 139 31 210 11 72 25 168 32
215 14 105 39 110 53 10z"/>
<path d="M3740 2460 c0 -11 -12 -20 -27 -20 -120 0 -86 -293 40 -338 193 -70
351 200 197 334 -52 46 -210 63 -210 24z"/>
<path d="M2087 1527 c-56 -123 0 -225 76 -138 53 61 77 65 77 12 0 -37 24 -38
840 -40 827 -1 840 0 840 39 0 22 10 40 22 40 12 0 18 -12 12 -27 -15 -38 17
-81 50 -68 47 18 45 215 -2 215 -24 0 -46 -21 -59 -55 -12 -35 -20 -42 -21
-20 -2 32 -29 35 -274 35 -234 0 -271 -4 -261 -30 17 -44 -6 -89 -39 -77 -15
6 -28 33 -28 59 0 35 -11 48 -40 48 -25 0 -40 -14 -41 -35 0 -33 -1 -33 -21 0
-31 55 -115 45 -130 -15 -7 -27 -21 -50 -31 -50 -10 0 -12 23 -5 50 l12 50
-172 0 c-136 0 -172 -6 -172 -29 0 -16 -10 -35 -23 -43 -16 -10 -20 -1 -12 28
10 41 3 42 -242 49 -139 4 -272 15 -296 23 -33 12 -48 7 -60 -21z"/>
</g>
</svg>
"""

class LoginForm(QDialog):
    def __init__(self, callback):
        self.callback = callback
        super().__init__()
        self.setWindowTitle('Login')
        self.setFixedSize(260, 350)

        layout = QVBoxLayout()

        # Show msg
        self.msg = QMessageBox()

        # Logo and Title
        logo_label = QLabel(self)
        pixmap = QPixmap(svg_string_to_qimage(icon3_str, (160, 160)))
        pixmap = pixmap.scaled(120, 115)  # Set the image size to 120x115
        logo_label.setPixmap(pixmap)
        logo_label.setAlignment(Qt.AlignCenter)
        layout.addWidget(logo_label)

        title_label = QLabel('Login', self)
        title_label.setAlignment(Qt.AlignCenter)
        layout.addWidget(title_label)

        # Username Input
        username_label = QLabel('Username', self)
        layout.addWidget(username_label)
        self.username_input = QLineEdit(self)
        layout.addWidget(self.username_input)

        # Password Input
        password_label = QLabel('Password', self)
        layout.addWidget(password_label)
        self.password_input = QLineEdit(self)
        self.password_input.setEchoMode(QLineEdit.Password)
        layout.addWidget(self.password_input)

        # Show Password Checkbox
        show_password_checkbox = QCheckBox('Show Password', self)
        show_password_checkbox.stateChanged.connect(
            self.toggle_password_visibility)
        layout.addWidget(show_password_checkbox)

        # Login Button
        login_button = QPushButton('Login', self)
        login_button.clicked.connect(self.login)
        layout.addWidget(login_button)

        # Account Management Links
        account_links_layout = QHBoxLayout()

        # go to al3rt.me to register
        register_link = QLabel(
            '<a href="https://al3rt.me/register">Register here</a>', self)
        # Open link in the default web browser
        register_link.setOpenExternalLinks(True)
        # Connect the linkActivated signal to a slot
        register_link.linkActivated.connect(self.open_link)

        reset_link = QLabel(
            '<a href="https://al3rt.me/reset">Forgot Password?</a>', self)
        # Open link in the default web browser
        reset_link.setOpenExternalLinks(True)
        # Connect the linkActivated signal to a slot
        reset_link.linkActivated.connect(self.open_link)

        account_links_layout.addWidget(register_link)
        account_links_layout.addStretch()
        account_links_layout.addWidget(reset_link)
        layout.addLayout(account_links_layout)

        self.setLayout(layout)

    def open_link(self, url):
        # Open the URL in the default web browser
        QDesktopServices.openUrl(QUrl(url))

    def toggle_password_visibility(self, state):
        if state == Qt.Checked:
            self.password_input.setEchoMode(QLineEdit.Normal)
        else:
            self.password_input.setEchoMode(QLineEdit.Password)

    def login(self):
        username = self.username_input.text()
        password = self.password_input.text()
        # Send a POST request to the Flask backend's /login endpoint
        # url = 'http://localhost:5000/app/login'
        url = 'https://al3rt.me/app/login'
        data = {'username': username, 'password': password}
        try:
            response = requests.post(url, data=data)
            print(response)
            if response.status_code == 200:
                data = response.json()                
                access_token = data['access_token']                
                setting.settings.setValue("access_token", access_token)
                setting.settings.sync()

                # enable UI & load streams
                self.callback()
                
                self.msg.setWindowTitle("Success")
                self.msg.setText(data['message'])
                self.msg.exec_()

                self.close()
            else:
                self.msg.setWindowTitle("Error")
                self.msg.setText(
                    "Login Failed.\nUser name or password is incorrect!")
                self.msg.exec_()
                # Login failed, display an error message
                print("Login failed")

        except Exception as e:
            print(e)


if __name__ == '__main__':
    app = QApplication(sys.argv)
    login_form = LoginForm()
    login_form.show()
    sys.exit(app.exec_())
